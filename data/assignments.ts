import type { Assignment } from "@/types/assignment"

export const assignments: Assignment[] = [
  {
    id: "1",
    title: "数据结构与算法课程报告",
    slug: "data-structure-algorithm-report",
    description: "详细分析常见数据结构和算法的实现原理及应用场景，附带Java代码示例。",
    date: "2023-05-20",
    category: "计算机科学",
    tags: [
      { name: "数据结构", category: "algorithm" },
      { name: "算法", category: "algorithm" },
      { name: "Java", category: "default" },
      { name: "学术报告", category: "default" },
    ],
    type: "report",
  },
  {
    id: "2",
    title: "Web前端开发课程作业",
    slug: "web-frontend-coursework",
    description: "包含HTML、CSS和JavaScript的前端开发课程作业集合，展示基础到高级的前端技能。",
    date: "2023-04-15",
    category: "Web开发",
    tags: [
      { name: "HTML", category: "css" },
      { name: "CSS", category: "css" },
      { name: "JavaScript", category: "javascript" },
      { name: "响应式设计", category: "css" },
    ],
    type: "demo",
    system: {
      type: "iframe",
      url: "https://codepen.io/embed/preview/xxyzabc",
      description: "交互式Web前端演示",
      technologies: ["HTML", "CSS", "JavaScript"],
      requiresBackend: false,
      demoAvailable: true,
    },
    thumbnail: "/placeholder.svg?height=200&width=300",
  },
  {
    id: "3",
    title: "机器学习实验报告",
    slug: "machine-learning",
    description: "使用Python和scikit-learn实现多种机器学习算法，并对比分析其性能和适用场景。",
    date: "2023-03-10",
    category: "人工智能",
    tags: [
      { name: "Python", category: "python" },
      { name: "机器学习", category: "python" },
      { name: "数据分析", category: "python" },
      { name: "scikit-learn", category: "python" },
    ],
    type: "interactive",
    system: {
      type: "notebook",
      url: "https://colab.research.google.com/drive/example",
      description: "交互式Jupyter笔记本，展示机器学习算法的实现和结果可视化",
      technologies: ["Python", "scikit-learn", "Jupyter", "Matplotlib"],
      requiresBackend: true,
      demoAvailable: true,
    },
    thumbnail: "/placeholder.svg?height=200&width=300",
    featured: true,
  },
  {
    id: "4",
    title: "计算机视觉期末项目",
    slug: "computer-vision",
    description: "基于OpenCV和PyTorch的图像识别系统，能够识别和分类不同类型的动漫角色。",
    date: "2023-02-05",
    category: "计算机视觉",
    tags: [
      { name: "Python", category: "python" },
      { name: "OpenCV", category: "python" },
      { name: "PyTorch", category: "python" },
      { name: "图像处理", category: "python" },
    ],
    type: "visualization",
    system: {
      type: "api",
      apiEndpoint: "/api/vision-demo",
      description: "动漫角色识别系统，上传图片后自动识别角色类型和特征",
      technologies: ["Python", "PyTorch", "OpenCV", "FastAPI"],
      requiresBackend: true,
      demoAvailable: true,
    },
    thumbnail: "/placeholder.svg?height=200&width=300",
    featured: true,
  },
  {
    id: "5",
    title: "数据库系统设计报告",
    slug: "database-design",
    description: "设计并实现一个动漫角色数据库，包含ER图、关系模式和SQL查询示例。",
    date: "2023-01-15",
    category: "数据库",
    tags: [
      { name: "SQL", category: "default" },
      { name: "数据库设计", category: "default" },
      { name: "ER图", category: "default" },
      { name: "关系模型", category: "default" },
    ],
    type: "report",
  },
  {
    id: "6",
    title: "操作系统课程项目",
    slug: "operating-system",
    description: "实现一个简单的进程调度模拟器，展示不同调度算法的工作原理和性能比较。",
    date: "2022-12-20",
    category: "操作系统",
    tags: [
      { name: "C++", category: "default" },
      { name: "进程调度", category: "default" },
      { name: "操作系统", category: "default" },
      { name: "并发", category: "default" },
    ],
    type: "demo",
    system: {
      type: "app",
      url: "/demos/process-scheduler",
      description: "进程调度模拟器，可视化展示不同调度算法的工作过程",
      technologies: ["C++", "WebAssembly", "Chart.js"],
      requiresBackend: false,
      demoAvailable: true,
    },
  },
  {
    id: "7",
    title: "深度学习图像分割项目",
    slug: "deep-learning-segmentation",
    description: "使用U-Net架构实现医学图像分割，可以精确识别和分割医学图像中的器官和病变区域。",
    date: "2023-06-15",
    category: "深度学习",
    tags: [
      { name: "Python", category: "python" },
      { name: "PyTorch", category: "python" },
      { name: "U-Net", category: "python" },
      { name: "医学图像", category: "python" },
    ],
    type: "visualization",
    system: {
      type: "api",
      apiEndpoint: "/api/segmentation-demo",
      description: "医学图像分割系统，上传医学图像后自动进行器官和病变区域分割",
      technologies: ["Python", "PyTorch", "OpenCV", "Flask"],
      requiresBackend: true,
      demoAvailable: true,
    },
    thumbnail: "/placeholder.svg?height=200&width=300",
    featured: true,
  },
  {
    id: "8",
    title: "自然语言处理情感分析",
    slug: "nlp-sentiment-analysis",
    description: "基于BERT模型的文本情感分析系统，可以分析文本的情感倾向和情绪强度。",
    date: "2023-07-20",
    category: "自然语言处理",
    tags: [
      { name: "Python", category: "python" },
      { name: "BERT", category: "python" },
      { name: "NLP", category: "python" },
      { name: "情感分析", category: "python" },
    ],
    type: "interactive",
    system: {
      type: "api",
      apiEndpoint: "/api/sentiment-analysis",
      description: "文本情感分析系统，输入文本后自动分析情感倾向和情绪强度",
      technologies: ["Python", "BERT", "Transformers", "Flask"],
      requiresBackend: true,
      demoAvailable: true,
    },
    thumbnail: "/placeholder.svg?height=200&width=300",
  },
]
